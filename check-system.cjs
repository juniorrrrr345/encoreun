const axios = require('axios');

async function checkSystem() {
  console.log('üîç V√©rification du syst√®me e-commerce...\n');

  // V√©rifier le backend
  try {
    console.log('üì° V√©rification du backend...');
    const backendResponse = await axios.get('http://localhost:5000/api/products');
    console.log('‚úÖ Backend fonctionnel -', backendResponse.data.products?.length || 0, 'produits trouv√©s');
  } catch (error) {
    console.log('‚ùå Backend non accessible:', error.message);
  }

  // V√©rifier les ports
  const ports = [
    { name: 'Boutique Frontend', port: 5173 },
    { name: 'Admin Panel', port: 5174 },
    { name: 'Backend API', port: 5000 }
  ];

  console.log('\nüåê V√©rification des ports:');
  for (const service of ports) {
    try {
      await axios.get(`http://localhost:${service.port}`, { timeout: 2000 });
      console.log(`‚úÖ ${service.name} - http://localhost:${service.port}`);
    } catch (error) {
      console.log(`‚ùå ${service.name} - Port ${service.port} non accessible`);
    }
  }

  console.log('\nüìã R√©sum√© du syst√®me:');
  console.log('‚Ä¢ Boutique: Interface client en noir et blanc');
  console.log('‚Ä¢ Admin Panel: Gestion des produits avec ajout automatique');
  console.log('‚Ä¢ Backend: API REST avec MongoDB Atlas');
  console.log('‚Ä¢ Fonctionnalit√©s: Suppression permanente, g√©n√©ration de descriptions');
  
  console.log('\nüéØ URLs d\'acc√®s:');
  console.log('‚Ä¢ Boutique: http://localhost:5173');
  console.log('‚Ä¢ Admin Panel: http://localhost:5174');
  console.log('‚Ä¢ API: http://localhost:5000/api');
}

checkSystem().catch(console.error);