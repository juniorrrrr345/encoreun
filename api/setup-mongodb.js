require('dotenv').config();
const mongoose = require('mongoose');

const testConnection = async () => {
  console.log('üîç Test de connexion MongoDB...\n');
  
  try {
    // Tester la connexion
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('‚úÖ Connexion MongoDB r√©ussie !');
    console.log(`üì¶ Base de donn√©es: ${mongoose.connection.name}`);
    console.log(`üîó URI: ${process.env.MONGODB_URI.replace(/\/\/.*@/, '//***:***@')}`);
    
    // Tester une op√©ration simple
    const testCollection = mongoose.connection.collection('test');
    await testCollection.insertOne({ 
      test: 'Connection test', 
      timestamp: new Date() 
    });
    
    console.log('‚úÖ Test d\'√©criture r√©ussi !');
    
    // Nettoyer le test
    await testCollection.deleteOne({ test: 'Connection test' });
    console.log('‚úÖ Test de suppression r√©ussi !');
    
    console.log('\nüéâ MongoDB est pr√™t √† √™tre utilis√© !');
    
  } catch (error) {
    console.error('‚ùå Erreur de connexion MongoDB:');
    console.error(error.message);
    
    console.log('\nüîß Solutions possibles:');
    console.log('1. V√©rifiez que MongoDB est d√©marr√©');
    console.log('2. V√©rifiez l\'URI dans le fichier .env');
    console.log('3. V√©rifiez les param√®tres d\'authentification');
    console.log('4. V√©rifiez que votre IP est autoris√©e (pour Atlas)');
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° MongoDB n\'est pas d√©marr√©. D√©marrez-le avec:');
      console.log('   - Local: sudo systemctl start mongod');
      console.log('   - Docker: docker start mongodb');
    }
    
    if (error.message.includes('Authentication failed')) {
      console.log('\nüí° Probl√®me d\'authentification. V√©rifiez:');
      console.log('   - Le nom d\'utilisateur et mot de passe');
      console.log('   - Les permissions de l\'utilisateur');
    }
    
  } finally {
    await mongoose.connection.close();
    console.log('\nüì¶ Connexion ferm√©e');
  }
};

// Ex√©cuter le test
testConnection();