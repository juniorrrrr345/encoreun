const { MongoClient, ServerApiVersion } = require('mongodb');
const uri = "mongodb+srv://Junior30:XRdu6jSVJLHKRZXc@junior.qykqkut.mongodb.net/boutique-admin?retryWrites=true&w=majority&appName=Junior";

// Create a MongoClient with a MongoClientOptions object to set the Stable API version
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});

async function run() {
  try {
    console.log('üîå Tentative de connexion √† MongoDB Atlas...');
    console.log('üì° URI:', uri.replace(/\/\/.*@/, '//***:***@'));
    
    // Connect the client to the server
    await client.connect();
    
    // Send a ping to confirm a successful connection
    await client.db("admin").command({ ping: 1 });
    console.log("‚úÖ Pinged your deployment. You successfully connected to MongoDB!");
    
    // Test de cr√©ation d'une base de donn√©es
    const db = client.db("boutique-admin");
    console.log("‚úÖ Base de donn√©es 'boutique-admin' accessible");
    
    // Test de cr√©ation d'une collection
    const collection = db.collection("test");
    await collection.insertOne({ test: "connection", timestamp: new Date() });
    console.log("‚úÖ Collection cr√©√©e et document ins√©r√© avec succ√®s");
    
    // Nettoyer le document de test
    await collection.deleteOne({ test: "connection" });
    console.log("‚úÖ Document de test supprim√©");
    
    console.log("\nüéâ Connexion MongoDB r√©ussie !");
    console.log("üöÄ Le syst√®me peut maintenant utiliser MongoDB Atlas");
    
  } catch (error) {
    console.error("‚ùå Erreur de connexion:", error.message);
    
    if (error.message.includes('bad auth')) {
      console.log('\nüîç Diagnostic d\'authentification:');
      console.log('1. V√©rifiez le nom d\'utilisateur: Junior30');
      console.log('2. V√©rifiez le mot de passe dans l\'URL');
      console.log('3. Assurez-vous que l\'utilisateur a les permissions de lecture/√©criture');
      console.log('4. V√©rifiez que l\'IP est autoris√©e dans MongoDB Atlas');
    }
    
    if (error.message.includes('ENOTFOUND')) {
      console.log('\nüîç Diagnostic r√©seau:');
      console.log('1. V√©rifiez que le nom du cluster est correct: junior.qykqkut.mongodb.net');
      console.log('2. V√©rifiez votre connexion internet');
    }
    
    console.log('\n‚ö†Ô∏è  Le syst√®me continuera avec les donn√©es en m√©moire');
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
    console.log("üîå Connexion ferm√©e");
  }
}

run().catch(console.dir);